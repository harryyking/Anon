// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@unique([provider, providerAccountId])
  @@map("accounts")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String   
  email         String   @unique
  emailVerified DateTime? @map("email_verified")
  image         String?
  slug          String   @unique
  
  // One-to-One relationship with Store

  points       Int        @default(0)
  theme        String     @default("light")
  messagesSent Message[]  @relation("Sender")
  messagesReceived Message[] @relation("Recipient")
  ratingsGiven Rating[]    @relation("Rater")
  ratingsReceived Rating[] @relation("Ratee")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
 
  @@map("users")
 
  Session Session[]
  Account Account[]
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verification_tokens")
}


model Message {
  id           String      @id @default(cuid())
  senderId     String?     @map("sender_id")
  recipientId  String      @map("recipient_id")
  content      String
  createdAt    DateTime   @default(now())
  sender       User?    @relation("Sender", fields: [senderId], references: [id])
  recipient    User     @relation("Recipient", fields: [recipientId], references: [id])
}

model Rating {
  id           String      @id @default(cuid())
  raterId      String      @map("rater_id")
  rateeId      String      @map("ratee_id")
  adore         Int
  hilarious          Int
  wow          Int
  cool           Int
  warm        Int
  smart       Int
  chill       Int
  curious       Int
  awkward       Int
  createdAt    DateTime   @default(now())
  rater        User     @relation("Rater", fields: [raterId], references: [id])
  ratee        User     @relation("Ratee", fields: [rateeId], references: [id])
  @@unique([raterId, rateeId])
}